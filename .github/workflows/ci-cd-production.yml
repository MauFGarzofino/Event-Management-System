name: CI/CD for Production

on:
  push:
    branches:
      - master
  pull_request:
    branches:
      - master

env:
  AZURE_WEBAPP_PACKAGE_PATH: EventManagementSystemAPI/publish
  CONFIGURATION: Release
  DOTNET_CORE_VERSION: 8.0.x
  WORKING_DIRECTORY: ./EventManagementSystemAPI/EventManagementSystemAPI.csproj

jobs:
  build:
    runs-on: windows-latest

    steps:
    - name: Checkout Code
      uses: actions/checkout@v4

    - name: Setup .NET SDK
      uses: actions/setup-dotnet@v3
      with:
        dotnet-version: ${{ env.DOTNET_CORE_VERSION }}

    - name: Restore Dependencies
      run: dotnet restore ./Event-Management-System.sln

    - name: Build Solution
      run: dotnet build ./Event-Management-System.sln --configuration ${{ env.CONFIGURATION }} --no-restore

    - name: Publish API Project
      run: dotnet publish ${{ env.WORKING_DIRECTORY }} --configuration ${{ env.CONFIGURATION }} --output ${{ env.AZURE_WEBAPP_PACKAGE_PATH }}

    - name: Upload Artifact for Deployment
      uses: actions/upload-artifact@v3
      with:
        name: webapp
        path: ${{ env.AZURE_WEBAPP_PACKAGE_PATH }}

  test:
    runs-on: windows-latest
    needs: build

    steps:
    - name: Checkout Code
      uses: actions/checkout@v4

    - name: Setup .NET SDK
      uses: actions/setup-dotnet@v3
      with:
        dotnet-version: ${{ env.DOTNET_CORE_VERSION }}

    - name: Build Tests
      run: dotnet build ./Event-Management-System.sln --configuration ${{ env.CONFIGURATION }}

    - name: Run Tests
      run: dotnet test ./Event-Management-System.sln --configuration ${{ env.CONFIGURATION }} --logger "trx;LogFileName=test-results.trx" --verbosity normal
      continue-on-error: false

    - name: Publish Test Results
      uses: EnricoMi/publish-unit-test-result-action/windows@v2
      if: always()
      with:
        files: '**/test-results.trx'

    - name: List Files in Test Directories
      run: |
        echo "Listing files in test directories:"
        ls -R ./EventManagementSystemAPI.Tests/bin/Release/net8.0
        ls -R ./EventMS.Application.Tests/bin/Release/net8.0
        ls -R ./EventMS.Infrastructure.Tests/bin/Release/net8.0
        ls -R ./EventMS.Domain.Tests/bin/Release/net8.0

  deploy:
    runs-on: windows-latest
    needs: test
    environment: production

    steps:
    - name: Download Artifact from Test Job
      uses: actions/download-artifact@v3
      with:
        name: webapp
        path: ${{ env.AZURE_WEBAPP_PACKAGE_PATH }}

    - name: Deploy to Azure WebApp
      uses: azure/webapps-deploy@v2
      with:
        app-name: ${{ secrets.AZURE_WEBAPP_NAME }}
        publish-profile: ${{ secrets.AZURE_PUBLISH_PROFILE_PROD }}
        package: ${{ env.AZURE_WEBAPP_PACKAGE_PATH }}
